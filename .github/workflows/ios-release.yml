name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.24.4'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
          
      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app
        
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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

          certificate-password: 111111
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa


      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/jiveup.ipa"
          APPLE_ID: "beldallwydc4@outlook.com"
          APP_SPECIFIC_PASSWORD: "ruok-csjg-mdlt-vpxb"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
